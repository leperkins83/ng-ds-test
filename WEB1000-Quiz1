Angular and Tree questions have been skipped.

 4.	Write a recursive function which receives
an array and returns the sum of the elements
of the array.
function sumArr(arr){
if(!arr || !arr.length || arr.length <=1) return arr[0];
return arr[0] + sumArr(arr.slice(1));
};

  5.	Given two temperatures, return
true if one is less than 0 and the other
is greater than 100.
function icyHot(a, b){
    if(a < 0 || b > 100 && b < 0 || a > 100){
    return true;
    }
    return false;
};
   a.	icyHot(120, -1) → true
   b.	icyHot(-1, 120) → true
   c.	icyHot(2, 120) → false


  6.	Given 2 ints, a and b, return
true if one if them is 10 or if their
sum is 10.
function makes10(a, b) {
    if(a === 10 || b === 10 || a + b === 10){
    return true;
    }
    return false;
};

   a.	makes10(9, 10) → true
   b.	makes10(9, 9) → false
   c.	makes10(1, 9) → true


  7.	Given a string, take the first 2
chars and return the string with the 2 chars
added at both the front and back, so "kitten"
yields"kikittenki". If the string length is
less than 2, use whatever chars are there.
function front22(str){
    var add2 = str.slice(0, 2);
    return add2 + str + add2;
};

   a.	front22("kitten") → "kikittenki"
   b.	front22("Ha") → "HaHaHa"
   c.	front22("abc") → "ababcab"

 9.	(Optional) Solve
https://codility.com/programmers/lessons/3-time_complexity/frog_jmp/
Submit the screenshot of your solution after being put through the
codility grader. see screenshot
function solution(X, Y, D) {
// write your code in JavaScript (Node.js 6.4.0)
    var numOfJumps = (Y-X)/D
    return Math.ceil(numOfJumps);
};

 10.(Optional) Solve
https://codility.com/programmers/lessons/3-time_complexity/perm_missing_elem/
ubmit a screenshot of your solution after being put through the codility grader.
see screenshot
function solution(A) {
// write your code in JavaScript (Node.js 6.4.0)
    var n = A.length;
    var total  = (n+1)*(n+2)/2;
    var sumA = 0;
    for (var i=0; i < n; i++) {
    sumA = sumA + A[i]
    }
return (total-sumA);
};
